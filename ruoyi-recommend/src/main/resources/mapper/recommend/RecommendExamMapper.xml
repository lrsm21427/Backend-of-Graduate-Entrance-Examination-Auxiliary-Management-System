<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.recommend.mapper.RecommendExamMapper">
    
    <resultMap type="RecommendExam" id="RecommendExamResult">
        <result property="lineId"    column="line_id"    />
        <result property="schoolId"    column="school_id"    />
        <result property="year"    column="year"    />
        <result property="schoolLink"    column="school_link"    />
        <result property="schoolName"    column="school_name"    />
        <result property="departmentLink"    column="department_link"    />
        <result property="departmentName"    column="department_name"    />
        <result property="majorId"    column="major_id"    />
        <result property="majorLink"    column="major_link"    />
        <result property="majorName"    column="major_name"    />
        <result property="scoreTotal"    column="score_total"    />
        <result property="scorePolitics"    column="score_politics"    />
        <result property="scoreForeignLanguage"    column="score_foreign_language"    />
        <result property="scoreSpecialized1"    column="score_specialized1"    />
        <result property="scoreSpecialized2"    column="score_specialized2"    />
    </resultMap>

    <sql id="selectRecommendExamVo">
        select line_id, school_id, year, school_link, school_name, department_link, department_name, major_id, major_link, major_name, score_total, score_politics, score_foreign_language, score_specialized1, score_specialized2 from postgraduate_exam
    </sql>

    <select id="selectRecommendExamList" parameterType="RecommendExam" resultMap="RecommendExamResult">
        <include refid="selectRecommendExamVo"/>
        <where>  
            <if test="year != null "> and year = #{year}</if>
            <if test="schoolName != null  and schoolName != ''"> and school_name like concat('%', #{schoolName}, '%')</if>
            <if test="departmentName != null  and departmentName != ''"> and department_name like concat('%', #{departmentName}, '%')</if>
            <if test="majorName != null  and majorName != ''"> and major_name like concat('%', #{majorName}, '%')</if>
            <if test="scoreTotal != null "> and score_total &gt;= #{scoreTotal}</if>
        </where>
    </select>
    
    <select id="selectRecommendExamByLineId" parameterType="Long" resultMap="RecommendExamResult">
        <include refid="selectRecommendExamVo"/>
        where line_id = #{lineId}
    </select>
        
    <insert id="insertRecommendExam" parameterType="RecommendExam" useGeneratedKeys="true" keyProperty="lineId">
        insert into postgraduate_exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">school_id,</if>
            <if test="year != null">year,</if>
            <if test="schoolLink != null">school_link,</if>
            <if test="schoolName != null">school_name,</if>
            <if test="departmentLink != null">department_link,</if>
            <if test="departmentName != null">department_name,</if>
            <if test="majorId != null">major_id,</if>
            <if test="majorLink != null">major_link,</if>
            <if test="majorName != null">major_name,</if>
            <if test="scoreTotal != null">score_total,</if>
            <if test="scorePolitics != null">score_politics,</if>
            <if test="scoreForeignLanguage != null">score_foreign_language,</if>
            <if test="scoreSpecialized1 != null">score_specialized1,</if>
            <if test="scoreSpecialized2 != null">score_specialized2,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="schoolId != null">#{schoolId},</if>
            <if test="year != null">#{year},</if>
            <if test="schoolLink != null">#{schoolLink},</if>
            <if test="schoolName != null">#{schoolName},</if>
            <if test="departmentLink != null">#{departmentLink},</if>
            <if test="departmentName != null">#{departmentName},</if>
            <if test="majorId != null">#{majorId},</if>
            <if test="majorLink != null">#{majorLink},</if>
            <if test="majorName != null">#{majorName},</if>
            <if test="scoreTotal != null">#{scoreTotal},</if>
            <if test="scorePolitics != null">#{scorePolitics},</if>
            <if test="scoreForeignLanguage != null">#{scoreForeignLanguage},</if>
            <if test="scoreSpecialized1 != null">#{scoreSpecialized1},</if>
            <if test="scoreSpecialized2 != null">#{scoreSpecialized2},</if>
         </trim>
    </insert>

    <update id="updateRecommendExam" parameterType="RecommendExam">
        update postgraduate_exam
        <trim prefix="SET" suffixOverrides=",">
            <if test="schoolId != null">school_id = #{schoolId},</if>
            <if test="year != null">year = #{year},</if>
            <if test="schoolLink != null">school_link = #{schoolLink},</if>
            <if test="schoolName != null">school_name = #{schoolName},</if>
            <if test="departmentLink != null">department_link = #{departmentLink},</if>
            <if test="departmentName != null">department_name = #{departmentName},</if>
            <if test="majorId != null">major_id = #{majorId},</if>
            <if test="majorLink != null">major_link = #{majorLink},</if>
            <if test="majorName != null">major_name = #{majorName},</if>
            <if test="scoreTotal != null">score_total = #{scoreTotal},</if>
            <if test="scorePolitics != null">score_politics = #{scorePolitics},</if>
            <if test="scoreForeignLanguage != null">score_foreign_language = #{scoreForeignLanguage},</if>
            <if test="scoreSpecialized1 != null">score_specialized1 = #{scoreSpecialized1},</if>
            <if test="scoreSpecialized2 != null">score_specialized2 = #{scoreSpecialized2},</if>
        </trim>
        where line_id = #{lineId}
    </update>

    <delete id="deleteRecommendExamByLineId" parameterType="Long">
        delete from postgraduate_exam where line_id = #{lineId}
    </delete>

    <delete id="deleteRecommendExamByLineIds" parameterType="String">
        delete from postgraduate_exam where line_id in 
        <foreach item="lineId" collection="array" open="(" separator="," close=")">
            #{lineId}
        </foreach>
    </delete>
</mapper>